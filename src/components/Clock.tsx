import React, { useState, useEffect } from "react";

interface ClockProps {
  startDate: Date;

}

interface Time {
  hours: number;
  minutes: number;
  seconds: number;
}

const convertDateToTime: (date: Date) => Time = (date) => {
  return {
    hours: date.getHours(),
    minutes: date.getMinutes(),
    seconds: date.getSeconds(),
  };
};

function getTimeInSeconds(time: Time): number {
  const { hours, minutes, seconds } = time;
  return hours * 3600 + minutes * 60 + seconds;
}

function getTimeDifference(startTime: Time, endTime: Time): Time {
  const startTimeInSeconds = getTimeInSeconds(startTime);
  const endTimeInSeconds = getTimeInSeconds(endTime);
  const differenceInSeconds = endTimeInSeconds - startTimeInSeconds;

  let remainingSeconds = differenceInSeconds;
  const hours = Math.floor(remainingSeconds / 3600);
  remainingSeconds %= 3600;
  const minutes = Math.floor(remainingSeconds / 60);
  const seconds = remainingSeconds % 60;

  return {
    hours,
    minutes,
    seconds,
  };
}

const Clock: React.FC<ClockProps> = ({ startDate }) => {
  const startTime = convertDateToTime(startDate);
  const [time, setTime] = useState<Time>(
    getTimeDifference(startTime, convertDateToTime(new Date()))
  );

  useEffect(() => {
    const timerID = setInterval(() => {
      const currentTime = convertDateToTime(new Date());
      const difference = getTimeDifference(startTime, currentTime);
      setTime(difference);
    }, 1000);

    return () => {
      clearInterval(timerID);
    };
  }, []);

  const formatTime = (value: number) => {
    return value.toString().padStart(2, "0");
  };

  const hours = formatTime(time.hours);
  const minutes = formatTime(time.minutes);
  const seconds = formatTime(time.seconds);

  return (
    <div className="py-5 text-3xl font-bold text-center">
      <span>{hours}</span> : <span>{minutes}</span> : <span>{seconds}</span>
    </div>
  );
};

export default Clock;
