import React, { useState } from "react";
import { HiMenuAlt3 } from "react-icons/hi";
import { MdOutlineCreateNewFolder, MdOutlineDashboard } from "react-icons/md";
import { RiInboxArchiveLine } from "react-icons/ri";
import { TbReportAnalytics } from "react-icons/tb";
import { FiSettings, FiLogIn, FiLogOut } from "react-icons/fi";
import { IoIosPeople } from "react-icons/io";
import { HiOutlinePuzzle } from "react-icons/hi";
import {
  LoaderFunction,
  LoaderFunctionArgs,
  Outlet,
  useLoaderData,
  useNavigate,
} from "react-router-dom";
import axios from "axios";
import { useAuthStore } from "../store/use-auth";
import { IconType } from "react-icons";
import { HiOutlinePencil } from "react-icons/hi";
type MenuItemType = {
  name: string;
  icon: IconType;
  margin?: boolean;
  isLogIn?: boolean;
  isLogOut?: boolean;
  condition: boolean;
  onClickHandler: () => void;
};
// TODO: define onClickHandler in the array itself

const MainNavigationLayout = () => {
  const loaderData = useLoaderData() as any;
  const setAuthState = useAuthStore((state) => state.setAuthState);
  setAuthState(loaderData.authState.isLoggedIn, loaderData.authState.userStatus);
  const isLoggedIn = useAuthStore((state) => state.isLoggedIn);
  const userStatus = useAuthStore((state) => state.userStatus);
  const [open, setOpen] = useState(true);
  const navigate = useNavigate();
  const menus: MenuItemType[] = [
    {
      name: "Dashboard",
      icon: MdOutlineDashboard,
      onClickHandler: () => navigate("/"),
      condition: true,
    },
    {
      name: "Tests",
      icon: HiOutlinePencil,
      onClickHandler: () => navigate("/tests"),
      condition: true,
    },
    {
      name: "Community",
      icon: IoIosPeople,
      onClickHandler: () => navigate("/"),
      condition: true,
    },
    {
      name: "Inbox",
      icon: RiInboxArchiveLine,
      onClickHandler: () => navigate("/inbox"),
      condition: true,
    },
    {
      name: "Analytics",
      icon: TbReportAnalytics,
      onClickHandler: () => navigate("/"),
      condition: true,
    },
    {
      name: "Create",
      icon: MdOutlineCreateNewFolder,
      onClickHandler: () => navigate("/create"),
      condition: isLoggedIn && userStatus === "admin",
    },
    {
      name: "Settings",
      icon: FiSettings,
      onClickHandler: () => navigate(""),
      condition: true,
    },
    {
      name: "Contribute",
      icon: HiOutlinePuzzle,
      margin: true,
      onClickHandler: () => navigate(""),
      condition: true,
    },
    {
      name: "Log Out",
      icon: FiLogOut,
      isLogOut: true,
      onClickHandler: async () => {
        console.log("inside log out onClickHandler")
        axios
          .get("http://localhost:8080/auth/logout", {
            withCredentials: true,
          })
          .then((_response) => {
            // setAuthState(false, "guest");
            navigate(0);
          });
      },
      condition: isLoggedIn,
    },
    {
      name: "Log In",
      icon: FiLogIn,
      isLogIn: true,
      onClickHandler: () => navigate("/login"),
      condition: !isLoggedIn,
    },
  ];
  return (
    <section className="flex gap-6 bg-slate-800">
      <div
        className={`bg-slate-900 min-h-screen ${
          open ? "w-72" : "w-16"
        } duration-500 text-gray-100 px-4`}
      >
        <div className="py-3 flex justify-end">
          <HiMenuAlt3 size={26} className="cursor-pointer" onClick={() => setOpen(!open)} />
        </div>
        <div className="mt-4 flex flex-col gap-4 relative">
          {menus.map((menu, i) => {
            if (!menu.condition) {
              return;
            }

            return (
              <div
                onClick={menu.onClickHandler}
                key={i}
                className={` ${
                  menu?.margin && "mt-5"
                } group flex items-center text-sm  gap-3.5 font-medium p-2 hover:bg-gray-800 rounded-md hover:cursor-pointer`}
              >
                <div>{React.createElement(menu.icon, { size: "20" })}</div>
                <h2
                  style={{
                    transitionDelay: `10ms`,
                  }}
                  className={`whitespace-pre duration-500 ${
                    !open && "opacity-0 translate-x-10 overflow-hidden"
                  }`}
                >
                  {menu.name}
                </h2>
              </div>
            );
          })}
        </div>
      </div>
      <div className="m-3 text-xl text-gray-900">
        <Outlet />
      </div>
    </section>
  );
};

export default MainNavigationLayout;

export const MainNavigationLayoutLoader: LoaderFunction = async (_args: LoaderFunctionArgs) => {
  console.log("inside mainNav loader");
  const response = await axios.get("http://localhost:8080/api/me", {
    withCredentials: true,
  });
  console.log(response.data);
  return {
    authState: {
      isLoggedIn: response.data.isLoggedIn,
      userStatus: response.data.userStatus,
    },
  };
};
