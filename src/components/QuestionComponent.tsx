import React, { useState } from "react";

interface QuestionComponentProps {
  question: string;
  options: {
    hexId: string;
    statement: string;
  }[];
  chosenOptionId: string | null;
  setChosenOptionId: React.Dispatch<React.SetStateAction<string | null>>;
}

const QuestionComponent: React.FC<QuestionComponentProps> = ({ question, options , chosenOptionId, setChosenOptionId}) => {
  const handleOptionChange = (option: string) => {
    if (option === chosenOptionId) {
      setChosenOptionId(null);
    } else {
      setChosenOptionId(option);
    }
  };

  console.log("chosenOptionId = ", chosenOptionId);
  return (
    <div className="w-full mx-5 p-4 rounded-md">
      <h2 className="text-xl font-bold mb-5">{question}</h2>
      {options.map((option, index) => (
        <div
          key={option.hexId}
          className={`shadow-sm bg-[#282828] w-full mb-4 py-4 px-4 rounded-[0.5rem] cursor-pointer ${
            chosenOptionId === option.hexId
              ? "border-[#3c9b0d] border-[1px]"
              : "border-[#383838] hover:border-[#484848] border-t-[1px] border-b-[1px] border-l-[1px] border-r-[1px]"
          } `}
          onClick={() => handleOptionChange(option.hexId)}
        >
          {" "}
          <div className="flex items-center space-x-2">
            <div className="mr-2 w-6 h-6 bg-[#484848] rounded-full flex items-center justify-center">
              {index + 1}
            </div>
            <span>{option.statement}</span>
          </div>
        </div>
      ))}
    </div>
  );
};

export default QuestionComponent;
