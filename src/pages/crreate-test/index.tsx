import axios from "axios";
import { stringify } from "querystring";
import React, { ChangeEvent, FC, FormEvent, useState } from "react";
import { IoMdOptions } from "react-icons/io";

interface indexProps {}

const testId = "017a87";
const CreateTest: FC<indexProps> = ({}) => {
  const createNewTestHandler = () => {
    axios
      .post("http://localhost:8080/api/init-test", { withCredentials: true })
      .then((response) => {
        console.log(response);
      })
      .catch((_err) => {
        console.log("something went wrong while trying to create a new test!");
      });
  };
  const [questionType, setQuestionType] = useState<string>("mcq");
  const [correctOption, setCorrectOption] = useState("");
  const [statement, setStatement] = useState("");
  const [correctAnswer, setCorrectAnswer] = useState<number>(0);
  const correctAnswerChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {
    console.log(
      "file: index.tsx ~ correctOptionChangeHandler ~ e.currentTarget.value:",
      e.currentTarget.value
    );
    if (e.currentTarget.value === "") {
      setCorrectAnswer(0);
    } else {
      setCorrectAnswer(parseInt(e.currentTarget.value));
    }
  };
  const statementChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {
    setStatement(e.currentTarget.value);
  };
  const questionTypeChangeHandler = (e: ChangeEvent<HTMLSelectElement>) => {
    setQuestionType(e.currentTarget.value);
  };

  let option: string[] = new Array(4);
  let setOption: React.Dispatch<React.SetStateAction<string>>[] = new Array(4);
  for (let i = 0; i < 4; ++i) {
    [option[i], setOption[i]] = useState("");
  }
  const correctOptionChangeHandler = (e: ChangeEvent<HTMLSelectElement>) => {
    setCorrectOption(e.currentTarget.value);
  };

  const formSubmitHandler = async (e: FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    console.log("file: index.tsx:19 ~ correctOption:", correctOption);
    for (let i = 0; i < 4; ++i) {
      console.log(`option[${i}] = ${option[i]}`);
    }
    console.log(`statement = ${statement}`);
    let response = "";
    if (questionType === "mcq") {
      response = await axios.put(
        `http://localhost:8080/api/tests/${testId}/questions`,
        {
          statement: statement,
          questionType: "mcq",
          options: option.map((value) => ({ statement: value })),
          questioncorrectAnswer: correctOption,
        },
        { withCredentials: true }
      );
    } else {
      response = await axios.put(`http://localhost:8080/api/tests/${testId}/questions`, {
        statement: statement,
        questionType: "number",
        correctAnswer: correctAnswer.toString(),
      });
    }
    console.log("file: index.tsx ~ formSubmitHandler ~ response :", response);
    console.log("question data has been sent");
  };
  console.log(`questionType = ${questionType}`);
  console.log(`correctAnswer = ${correctAnswer}`);
  return (
    <React.Fragment>
      <form onSubmit={formSubmitHandler}>
        <div className="p-6">
          <label className="text-slate-200 pr-3" htmlFor="testName">
            Select Test
          </label>
          <select className="bg-slate-400 p-2" id="testName" name="testName">
            <option value="1">Option 1</option>
            <option value="2">Option 2</option>
            <option value="3">Option 3</option>
            <option value="4">Option 4</option>
          </select>
        </div>
        <div className="p-6">
          <label className="text-slate-200 pr-3" htmlFor="questionType">
            Select Question Type
          </label>
          <select
            value={questionType}
            onChange={questionTypeChangeHandler}
            className="bg-slate-400 p-2"
            id="testName"
            name="testName"
          >
            <option value="mcq">mcq</option>
            <option value="numerical">numerical</option>
          </select>
        </div>
        <div className="p-3">
          <label className="text-slate-200 pr-2" htmlFor="statement">
            Statement:
          </label>
          <input
            value={statement}
            onChange={statementChangeHandler}
            className="bg-slate-400 rounded p-3"
            type="text"
            id="statement"
            name="statement"
          />
        </div>
        {questionType === "mcq" && (
          <React.Fragment>
            {[0, 1, 2, 3].map((value) => {
              return (
                <div key={value} className="p-6">
                  <label className="text-slate-200 pr-2" htmlFor={`option${value}`}>
                    Option {value}:
                  </label>
                  <input
                    value={option[value]}
                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {
                      setOption[value](e.currentTarget.value);
                    }}
                    className="bg-slate-400 rounded p-3"
                    type="text"
                    id={`option${value}`}
                    name="options"
                  />
                </div>
              );
            })}
            <div>
              <label className="text-slate-200 pr-2" htmlFor="correctOption">
                Correct Option:
              </label>
              <select
                value={correctOption}
                onChange={correctOptionChangeHandler}
                className="bg-slate-400 p-2"
                id="correctOption"
                name="correctOption"
              >
                <option value="1">Option 1</option>
                <option value="2">Option 2</option>
                <option value="3">Option 3</option>
                <option value="4">Option 4</option>
              </select>
            </div>{" "}
          </React.Fragment>
        )}
        <div className="p-3">
          <label className="text-slate-200 pr-2" htmlFor="correctAnswer">
            Correct Answer:
          </label>
          <input
            value={correctAnswer}
            onChange={correctAnswerChangeHandler}
            className="bg-slate-400 rounded p-3"
            type="number"
            id="statement"
            name="statement"
          />
        </div>
        <button className="bg-blue-500 hover:bg-blue-600 rounded-md p-3 mt-3" type="submit">
          Submit
        </button>
      </form>
      <div className="text-slate-200">
        <p>create new test</p>
        <button
          onClick={createNewTestHandler}
          className="bg-blue-500 hover:bg-blue-600 rounded-md p-3 mt-3"
          type="submit"
        >
          create-new-test (only click once)
        </button>
      </div>
    </React.Fragment>
  );
};

export default CreateTest;
