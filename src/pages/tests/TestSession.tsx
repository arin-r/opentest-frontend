import { FC } from 'react'
import { LoaderFunction, LoaderFunctionArgs } from 'react-router-dom'
import ButtonBox from '../../components/ButtonBox'

interface TestSessionProps {
  
}

const TestSession: FC<TestSessionProps> = ({}) => {
  return (
    <div>
      <ButtonBox/>
    </div>
  )
}

export default TestSession

const TestSessionLoader: LoaderFunction = (_args: LoaderFunctionArgs) => {
  /**
   * validate if session exists.
   *    1. extract params.testId. 
   *    2. Send request to backend. Backend must validate if user.ongoingTestSession is of this test. 
   *    3. Backend must automatically destroy the session once timer runs out or submit test has been clicked. 
   * If Yes:
   *    1. A lot of information has to be pulled. Not sure how to proceed, and whether to proceed in parts. 
   *    2. For now questions will be pulled with following fields {subject, type, hexId}
   *    3. A list of buttons is created, under respective subject. 
   *        i. On button click question information is pulled from backend. 
   *            a. Backend must validate if question belongs to test. And if the test session exists.
   *        ii. Display the information accordingly. 
   *
   */
  return null;
}